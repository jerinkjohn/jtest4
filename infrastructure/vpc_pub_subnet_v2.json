{

  "AWSTemplateFormatVersion" : "2010-09-09",

 

  "Description" : "AWS CloudFormation template to launch node hello world instance",

 

  "Parameters" : {

      "KeyName" : {

          "Description" : "EC2 Key Pair for SSH Access",

                                           "Type" : "AWS::EC2::KeyPair::KeyName",

          "Default" : "EC2_KEY_PAIR_NAME",

          "MinLength": "1",

          "MaxLength": "64",

          "AllowedPattern" : "[-_ a-zA-Z0-9]*",

          "ConstraintDescription" : "can contain only alphanumeric characters, spaces, dashes and underscores."

      },

      "InstanceType" : {

         "Description" : "Instance1 EC2 instance type",

          "Type" : "String",

          "Default" :"t2.micro",

          "AllowedValues" : [ "t2.micro","m1.small","m1.medium","m1.large","m1.xlarge","m2.xlarge","m2.2xlarge","m2.4xlarge","m3.medium","m3.xlarge","c4.xlarge","c4.4xlarge","m3.2xlarge","c1.medium","c1.xlarge","cc1.4xlarge","c4.large","cc2.8xlarge","cg1.4xlarge"],

          "ConstraintDescription" : "must be a valid EC2 instance type."

      },

                            "LatestAmiId" : {

                                           "Description" : "Gets the latest AMI from Systems Manager Parameter store",

                                           "Type" : "AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>",

                                           "Default" : "/aws/service/ami-amazon-linux-latest/amzn2-ami-hvm-x86_64-gp2"

                            }

  },

 

  "Mappings" : {

      "AWSInstanceMapping" : {

        "t2.micro"    : { "Arch" : "64" },

        "t2.small"    : { "Arch" : "64" },

        "t2.medium"   : { "Arch" : "64" },

        "t2.large"    : { "Arch" : "64" },

        "m3.medium"   : { "Arch" : "64" },

        "m4.large"   : { "Arch" : "64" },

        "m4.xlarge"  : { "Arch" : "64" },

        "m4.2xlarge"  : { "Arch" : "64" }

      },

 

      "InstanceAMI" : {

        "us-east-1"      : { "64" : "ami-047a51fa27710816e" }

      }



  },

  "Resources" : {



          "VPC" : {

            "Type" : "AWS::EC2::VPC",

            "Properties" : {

              "CidrBlock" : "10.0.0.0/16",

              "Tags" : [

                {"Key" : "Application", "Value" : { "Ref" : "AWS::StackId"} },

                { "Key": "Name", "Value": "__JumpStartPOC__VPC"},

                {"Key" : "Network", "Value" : "Public" }

              ]

            }

          },

     

          "PublicSubnet" : {

            "Type" : "AWS::EC2::Subnet",

            "Properties" : {

              "VpcId" : { "Ref" : "VPC" },

              "CidrBlock" : "10.0.0.0/24",

              "Tags" : [

                {"Key" : "Application", "Value" : { "Ref" : "AWS::StackId"} },

                {"Key" : "Network", "Value" : "Public" },

                { "Key": "Name", "Value": "__JumpStartPOC__Public_Subnet"}

              ]

            }

          },

     

          "InternetGateway" : {

            "Type" : "AWS::EC2::InternetGateway",

            "Properties" : {

              "Tags" : [

                {"Key" : "Application", "Value" : { "Ref" : "AWS::StackId"} },

                {"Key" : "Network", "Value" : "Public" },

                { "Key": "Name", "Value": "__JumpStartPOC__Internetgateway"}

              ]

            }

          },

     

          "AttachGateway" : {

             "Type" : "AWS::EC2::VPCGatewayAttachment",

             "Properties" : {

               "VpcId" : { "Ref" : "VPC" },

               "InternetGatewayId" : { "Ref" : "InternetGateway" }

             }

          },



          "PublicRouteTable" : {

              "Type" : "AWS::EC2::RouteTable",

              "Properties" : {

                "VpcId" : {"Ref" : "VPC"},

                "Tags" : [

                  {"Key" : "Application", "Value" : { "Ref" : "AWS::StackId"} },

                  {"Key" : "Network", "Value" : "Public" },

                  { "Key": "Name", "Value": "__JumpStartPOC__public_routetable"}

                ]

              }

            },

        

            "PublicRoute" : {

              "Type" : "AWS::EC2::Route",

              "DependsOn" : "AttachGateway",

              "Properties" : {

                "RouteTableId" : { "Ref" : "PublicRouteTable" },

                "DestinationCidrBlock" : "0.0.0.0/0",

                "GatewayId" : { "Ref" : "InternetGateway" }

              }

            },

       

            "PublicSubnetRouteTableAssociation" : {

              "Type" : "AWS::EC2::SubnetRouteTableAssociation",

              "Properties" : {

                "SubnetId" : { "Ref" : "PublicSubnet" },

                "RouteTableId" : { "Ref" : "PublicRouteTable" }

              }

            },

       

            "PublicNetworkAcl" : {

              "Type" : "AWS::EC2::NetworkAcl",

              "Properties" : {

                "VpcId" : {"Ref" : "VPC"},

                "Tags" : [

                  {"Key" : "Application", "Value" : { "Ref" : "AWS::StackId"} },

                  {"Key" : "Network", "Value" : "Public" },

                  {"Key": "Name", "Value": "__JumpStartPOC__publicNetworkacl"}

                ]

              }

            },



            "InboundHTTPPublicNetworkAclEntry" : {

              "Type" : "AWS::EC2::NetworkAclEntry",

              "Properties" : {

                "NetworkAclId" : {"Ref" : "PublicNetworkAcl"},

                "RuleNumber" : "100",

                "Protocol" : "6",

                "RuleAction" : "allow",

                "Egress" : "false",

                "CidrBlock" : "0.0.0.0/0",

                "PortRange" : {"From" : "0", "To" : "65535"}

              }

            },

       

                  

            "OutboundHTTPPublicNetworkAclEntry" : {

              "Type" : "AWS::EC2::NetworkAclEntry",

              "Properties" : {

                "NetworkAclId" : {"Ref" : "PublicNetworkAcl"},

                "RuleNumber" : "100",

                "Protocol" : "6",

                "RuleAction" : "allow",

                "Egress" : "true",

                "CidrBlock" : "0.0.0.0/0",

                "PortRange" : {"From" : "0", "To" : "65535"}

              }

            },

       
            "PublicSubnetNetworkAclAssociation" : {

              "Type" : "AWS::EC2::SubnetNetworkAclAssociation",

              "Properties" : {

                "SubnetId" : { "Ref" : "PublicSubnet" },

                "NetworkAclId" : { "Ref" : "PublicNetworkAcl" }

              }

            },

            "InstanceSecurityGroup" : {

              "Type" : "AWS::EC2::SecurityGroup",

              "Properties" : {

                "GroupDescription" : "Enable node server port access",

                "VpcId" : { "Ref" : "VPC" },

                "SecurityGroupIngress" : [ { "IpProtocol" : "tcp", "FromPort" : "3000", "ToPort" : "3000", "CidrIp" : "0.0.0.0/0"} ],

                "Tags" : [

                {"Key": "Name", "Value": "__JumpStartPOC__EC2_sg"}

                 ]

              }},

			  "EC2Role":{
				"Type":"AWS::IAM::Role",
				"Properties":{
				  "AssumeRolePolicyDocument":{
					"Statement":[
						{
						"Effect":"Allow",
						"Principal":{
						  "Service":[
							"ec2.amazonaws.com"
						  ]
						},
						"Action":[
						  "sts:AssumeRole"
						]
					  }         
					]
				  },
				  "Path":"/",
				  "Policies":[
					{
					  "PolicyName":"ec2-service",
					  "PolicyDocument":{
						"Statement":[
						  {
							"Effect":"Allow",
							"Action":[
							  "s3:*"
							],
							"Resource":[ 
									"arn:aws:s3:::jumpstarttemplate/*",
									"arn:aws:s3:::jumpstarttemplate"
							]
						  }
						]
					  }
					}
				  ]
				}
			  },
			  "EC2InstanceProfile":{
				"Type":"AWS::IAM::InstanceProfile",
				"Properties":{
				  "Path":"/",
				  "Roles":[
					  {
					  "Ref":"EC2Role"
					}
				  ]
				}
			  },
       

              "Instance" : {

              "Type" : "AWS::EC2::Instance",

              "Properties" : {

                "KeyName" : { "Ref" : "KeyName" },

                "InstanceType" : { "Ref" : "InstanceType" },
				
				"IamInstanceProfile" : { "Ref" : "EC2InstanceProfile" },

                "ImageId" : {"Ref" : "LatestAmiId" },

                "NetworkInterfaces" : [

                                { "DeviceIndex" : "0",

                                            "AssociatePublicIpAddress" : "true",

                                            "DeleteOnTermination" : "true",

                                            "SubnetId" : { "Ref" : "PublicSubnet" },

                                            "GroupSet" : [ { "Ref" : "InstanceSecurityGroup" } ]

                                }

                ],

                "Tags" : [

                {"Key": "Name", "Value": "__JumpStartPOC__Instance"}

                 ],

                 "UserData"       : { "Fn::Base64" : { "Fn::Join" : ["", [

                      "#!/bin/bash -ex\n\n",

                      "sudo yum update -y\n",

                      "echo 'Node.JS installation starting'\n",
                     
                      "curl --silent --location https://rpm.nodesource.com/setup_14.x | sudo bash -\n",

                      "sudo yum install -y nodejs\n",

                      "echo 'Node.JS Installed'\n",
					  
					  "aws s3 cp s3://jumpstarttemplate/NodeTemplate /home/ec2-user/nodeapp --recursive\n",

                      "npm install --prefix /home/ec2-user/nodeapp/\n",

                      "nohup node /home/ec2-user/nodeapp/app.js > app.out 2> app.err < /dev/null &\n",

                      "echo 'node server started'"
                

                  ]]}}

              }

            }         

        

  },

             "Outputs" : {

                "InstanceId" : {

                "Description" : "InstanceId of the newly created instance",

                "Value" : { "Ref" : "Instance" }

                },

                "WebUrl" : {

                "Description" : "This is the endpoint of application.",

                "Value" : { "Fn::Join" : [ "", [ "http://", { "Fn::GetAtt" : [ "Instance", "PublicIp"] } , ":3000" ] ] }

                }

             }

}